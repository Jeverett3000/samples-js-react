{"version":3,"sources":["polyfills.js","config.js","Home.jsx","Login.jsx","Messages.jsx","Navbar.jsx","Profile.jsx","CorsErrorModal.jsx","App.jsx","index.js"],"names":["window","TextEncoder","BASENAME","oidc","clientId","process","issuer","redirectUri","location","origin","scopes","pkce","disableHttpsCheck","useInteractionCode","resourceServer","messagesUrl","app","basename","Home","history","useHistory","useOktaAuth","authState","oktaAuth","useState","userInfo","setUserInfo","useEffect","isAuthenticated","getUser","then","info","login","a","push","Header","as","name","href","label","url","map","example","Button","id","primary","onClick","Login","setCorsErrorModalOpen","widgetRef","useRef","current","config","widget","OktaSignIn","baseUrl","split","logo","i18n","en","authParams","useInteractionCodeFlow","renderEl","el","res","console","log","handleLoginRedirect","tokens","err","on","_context","error","statusCode","remove","ref","Messages","messages","setMessages","messageFetchFailed","setMessageFetchFailed","accessToken","getAccessToken","fetch","headers","Authorization","response","ok","json","Promise","reject","data","index","formattedMessages","message","date","Date","day","toLocaleDateString","time","toLocaleTimeString","text","catch","Icon","Message","header","list","Table","Navbar","logout","createHref","pathname","signOut","postLogoutRedirectUri","errorCode","xhr","Menu","fixed","inverted","Container","Item","Image","size","src","to","isPending","Profile","Object","entries","claimEntry","claimName","claimValue","claimId","toString","CorsErrorModal","corsErrorModalOpen","hostParts","URL","host","adminHost","join","corsAdminUrl","Modal","onClose","open","closeIcon","Content","Description","target","rel","OktaAuth","App","restoreOriginalUri","_oktaAuth","originalUri","replace","toRelativeUrl","onAuthResume","React","onAuthRequired","style","marginTop","path","exact","component","render","props","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8dd3b0f1.chunk.js","sourcesContent":["// polyfill TextEncoder for IE Edge\nimport { TextEncoder } from 'text-encoding';\n\nif (typeof window.TextEncoder === 'undefined') {\n  window.TextEncoder = TextEncoder;\n}\n","const CLIENT_ID = process.env.CLIENT_ID || '{clientId}';\nconst ISSUER = process.env.ISSUER || 'https://{yourOktaDomain}.com/oauth2/default';\nconst OKTA_TESTING_DISABLEHTTPSCHECK = process.env.OKTA_TESTING_DISABLEHTTPSCHECK || false;\nconst BASENAME = process.env.NODE_ENV === 'production' ? '/custom-login' : '';\nconst REDIRECT_URI = `${window.location.origin}${BASENAME}/login/callback`;\nlet USE_INTERACTION_CODE = false;\nif (process.env.USE_INTERACTION_CODE === 'true') {\n  USE_INTERACTION_CODE = true;\n}\n\nexport default {\n  oidc: {\n    clientId: CLIENT_ID,\n    issuer: ISSUER,\n    redirectUri: REDIRECT_URI,\n    scopes: ['openid', 'profile', 'email'],\n    pkce: true,\n    disableHttpsCheck: OKTA_TESTING_DISABLEHTTPSCHECK,\n    useInteractionCode: USE_INTERACTION_CODE,\n  },\n  resourceServer: {\n    messagesUrl: 'http://localhost:8000/api/messages',\n  },\n  app: {\n    basename: BASENAME,\n  },\n};\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { useOktaAuth } from '@okta/okta-react';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Header } from 'semantic-ui-react';\n\nconst Home = () => {\n  const history = useHistory();\n  const { authState, oktaAuth } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (!authState || !authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      oktaAuth.getUser().then((info) => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, oktaAuth]); // Update if authState changes\n\n  const login = async () => {\n    history.push('/login');\n  };\n\n  const resourceServerExamples = [\n    {\n      label: 'Node/Express Resource Server Example',\n      url: 'https://github.com/okta/samples-nodejs-express-4/tree/master/resource-server',\n    },\n    {\n      label: 'Java/Spring MVC Resource Server Example',\n      url: 'https://github.com/okta/samples-java-spring/tree/master/resource-server',\n    },\n    {\n      label: 'ASP.NET Core Resource Server Example',\n      url: 'https://github.com/okta/samples-aspnetcore/tree/master/samples-aspnetcore-3x/resource-server',\n    },\n  ];\n\n  if (!authState) {\n    return (\n      <div>Loading...</div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <Header as=\"h1\">PKCE Flow w/ Custom Login</Header>\n\n        { authState.isAuthenticated && !userInfo\n        && <div>Loading user information...</div>}\n\n        {authState.isAuthenticated && userInfo\n        && (\n        <div>\n          <p>\n            Welcome, &nbsp;\n            {userInfo.name}\n            !\n          </p>\n          <p>\n            You have successfully authenticated against your Okta org, and have been redirected back to this application.  You now have an ID token and access token in local storage.\n            Visit the\n            {' '}\n            <a href=\"/profile\">My Profile</a>\n            {' '}\n            page to take a look inside the ID token.\n          </p>\n          <h3>Next Steps</h3>\n          <p>Currently this application is a stand-alone front end application.  At this point you can use the access token to authenticate yourself against resource servers that you control.</p>\n          <p>This sample is designed to work with one of our resource server examples.  To see access token authentication in action, please download one of these resource server examples:</p>\n          <ul>\n            {resourceServerExamples.map((example) => <li key={example.url}><a href={example.url}>{example.label}</a></li>)}\n          </ul>\n          <p>\n            Once you have downloaded and started the example resource server, you can visit the\n            {' '}\n            <a href=\"/messages\">My Messages</a>\n            {' '}\n            page to see the authentication process in action.\n          </p>\n        </div>\n        )}\n\n        {!authState.isAuthenticated\n        && (\n        <div>\n          <p>If you&lsquo;re viewing this page then you have successfully started this React application.</p>\n          <p>\n            <span>This example shows you how to use the </span>\n            <a href=\"https://github.com/okta/okta-react/tree/master\">Okta React Library</a>\n            <span> to add the </span>\n            <a href=\"https://developer.okta.com/docs/guides/implement-auth-code-pkce\">PKCE Flow</a>\n            <span> to your application.</span>\n          </p>\n          <p>\n            When you click the login button below, you will be presented the login page on the Okta Sign-In Widget hosted within the application.\n            After you authenticate, you will be logged in to this application with an ID token and access token. These tokens will be stored in local storage and can be retrieved at a later time.\n          </p>\n          <Button id=\"login-button\" primary onClick={login}>Login</Button>\n        </div>\n        )}\n\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport React, { useEffect, useRef } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport * as OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\n\nimport config from './config';\n\nconst Login = ({ setCorsErrorModalOpen }) => {\n  const { oktaAuth } = useOktaAuth();\n  const widgetRef = useRef();\n\n  useEffect(() => {\n    if (!widgetRef.current) {\n      return false;\n    }\n\n    const { issuer, clientId, redirectUri, scopes, useInteractionCode } = config.oidc;\n    const widget = new OktaSignIn({\n      /**\n       * Note: when using the Sign-In Widget for an OIDC flow, it still\n       * needs to be configured with the base URL for your Okta Org. Here\n       * we derive it from the given issuer for convenience.\n       */\n      baseUrl: issuer.split('/oauth2')[0],\n      clientId,\n      redirectUri,\n      logo: `${process.env.PUBLIC_URL}/react.svg`,\n      i18n: {\n        en: {\n          'primaryauth.title': 'Sign in to React & Company',\n        },\n      },\n      authParams: {\n        // To avoid redirect do not set \"pkce\" or \"display\" here. OKTA-335945\n        issuer,\n        scopes,\n      },\n      useInteractionCodeFlow: useInteractionCode, // Set to true, if your org is OIE enabled\n    });\n\n    widget.renderEl(\n      { el: widgetRef.current },\n      (res) => {\n        console.log(res);\n        oktaAuth.handleLoginRedirect(res.tokens);\n      },\n      (err) => {\n        throw err;\n      },\n    );\n\n    // Note: Can't distinguish CORS error from other network errors\n    const isCorsError = (err) => (err.name === 'AuthApiError' && !err.statusCode);\n\n    widget.on('afterError', (_context, error) => {\n      if (isCorsError(error)) {\n        setCorsErrorModalOpen(true);\n      }\n    });\n\n    return () => widget.remove();\n  }, [oktaAuth]);\n\n  return (\n    <div>\n      <div ref={widgetRef} />\n    </div>\n  );\n};\nexport default Login;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { useOktaAuth } from '@okta/okta-react';\nimport React, { useState, useEffect } from 'react';\nimport { Header, Icon, Message, Table } from 'semantic-ui-react';\n\nimport config from './config';\n\nconst Messages = () => {\n  const { authState, oktaAuth } = useOktaAuth();\n  const [messages, setMessages] = useState(null);\n  const [messageFetchFailed, setMessageFetchFailed] = useState(false);\n\n  // fetch messages\n  useEffect(() => {\n    if (authState && authState.isAuthenticated) {\n      const accessToken = oktaAuth.getAccessToken();\n      fetch(config.resourceServer.messagesUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            return Promise.reject();\n          }\n          return response.json();\n        })\n        .then((data) => {\n          let index = 0;\n          const formattedMessages = data.messages.map((message) => {\n            const date = new Date(message.date);\n            const day = date.toLocaleDateString();\n            const time = date.toLocaleTimeString();\n            index += 1;\n            return {\n              date: `${day} ${time}`,\n              text: message.text,\n              id: `message-${index}`,\n            };\n          });\n          setMessages(formattedMessages);\n          setMessageFetchFailed(false);\n        })\n        .catch((err) => {\n          setMessageFetchFailed(true);\n          /* eslint-disable no-console */\n          console.error(err);\n        });\n    }\n  }, [authState]);\n\n  const possibleErrors = [\n    'You\\'ve downloaded one of our resource server examples, and it\\'s running on port 8000.',\n    'Your resource server example is using the same Okta authorization server (issuer) that you have configured this React application to use.',\n  ];\n\n  return (\n    <div>\n      <Header as=\"h1\">\n        <Icon name=\"mail outline\" />\n        My Messages\n      </Header>\n      {messageFetchFailed && <Message error header=\"Failed to fetch messages.  Please verify the following:\" list={possibleErrors} />}\n      {!messages && !messageFetchFailed && <p>Fetching Messages..</p>}\n      {messages\n      && (\n      <div>\n        <p>\n          This component makes a GET request to the resource server example, which must be running at\n          <code>localhost:8000/api/messages</code>\n        </p>\n        <p>\n          It attaches your current access token in the\n          {' '}\n          <code>Authorization</code>\n          {' '}\n          header on the request,\n          and the resource server will attempt to authenticate this access token.\n          If the token is valid the server will return a list of messages.  If the token is not valid\n          or the resource server is incorrectly configured, you will see a 401\n          {' '}\n          <code>Unauthorized response</code>\n          .\n        </p>\n        <p>\n          This route is protected with the\n          {' '}\n          <code>&lt;SecureRoute&gt;</code>\n          {' '}\n          component, which will\n          ensure that this page cannot be accessed until you have authenticated and have an access token in local storage.\n        </p>\n        <Table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Message</th>\n            </tr>\n          </thead>\n          <tbody>\n            {messages.map((message) => (\n              <tr id={message.id} key={message.id}>\n                <td>{message.date}</td>\n                <td>{message.text}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n      )}\n    </div>\n  );\n};\n\nexport default Messages;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { useOktaAuth } from '@okta/okta-react';\nimport React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Container, Icon, Image, Menu } from 'semantic-ui-react';\n\nconst Navbar = ({ setCorsErrorModalOpen }) => {\n  const history = useHistory();\n  const { authState, oktaAuth } = useOktaAuth();\n\n  const login = async () => history.push('/login');\n\n  // Note: Can't distinguish CORS error from other network errors\n  const isCorsError = (err) => (err.name === 'AuthApiError' && !err.errorCode && err.xhr.message === 'Failed to fetch');\n\n  const logout = async () => {\n    const basename = window.location.origin + history.createHref({ pathname: '/' });\n    try {\n      await oktaAuth.signOut({ postLogoutRedirectUri: basename });\n    } catch (err) {\n      if (isCorsError(err)) {\n        setCorsErrorModalOpen(true);\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  if (!authState) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Menu fixed=\"top\" inverted>\n        <Container>\n          <Menu.Item header>\n            <Image size=\"mini\" src={`${process.env.PUBLIC_URL}/react.svg`} />\n            &nbsp;\n            <Link to=\"/\">Okta-React Sample Project</Link>\n          </Menu.Item>\n          {authState.isAuthenticated && (\n          <Menu.Item id=\"messages-button\">\n            <Icon name=\"mail outline\" />\n            <Link to=\"/messages\">Messages</Link>\n          </Menu.Item>\n          )}\n          {authState.isAuthenticated && (\n            <Menu.Item id=\"profile-button\">\n              <Link to=\"/profile\">Profile</Link>\n            </Menu.Item>\n          )}\n          {authState.isAuthenticated && <Menu.Item id=\"logout-button\" onClick={logout}>Logout</Menu.Item>}\n          {!authState.isPending && !authState.isAuthenticated && <Menu.Item onClick={login}>Login</Menu.Item>}\n        </Container>\n      </Menu>\n    </div>\n  );\n};\nexport default Navbar;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { Header, Icon, Table } from 'semantic-ui-react';\n\nconst Profile = () => {\n  const { authState, oktaAuth } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (!authState || !authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      oktaAuth.getUser().then((info) => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, oktaAuth]); // Update if authState changes\n\n  if (!userInfo) {\n    return (\n      <div>\n        <p>Fetching user profile...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <Header as=\"h1\">\n          <Icon name=\"drivers license\" />\n          {' '}\n          My User Profile (ID Token Claims)\n          {' '}\n        </Header>\n        <p>\n          Below is the information from your ID token which was obtained during the &nbsp;\n          <a href=\"https://developer.okta.com/docs/guides/implement-auth-code-pkce\">PKCE Flow</a>\n          {' '}\n          and is now stored in local storage.\n        </p>\n        <p>\n          This route is protected with the\n          {' '}\n          <code>&lt;SecureRoute&gt;</code>\n          {' '}\n          component, which will ensure that this page cannot be accessed until you have authenticated.\n        </p>\n        <Table>\n          <thead>\n            <tr>\n              <th>Claim</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(userInfo).map((claimEntry) => {\n              const claimName = claimEntry[0];\n              const claimValue = claimEntry[1];\n              const claimId = `claim-${claimName}`;\n              return (\n                <tr key={claimName}>\n                  <td>{claimName}</td>\n                  <td id={claimId}>{claimValue.toString()}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport config from './config';\n\nconst CorsErrorModal = ({ corsErrorModalOpen, setCorsErrorModalOpen }) => {\n  // Build URL to \"Trusted Origins\" page in Admin panel\n  const { issuer } = config.oidc;\n  const baseUrl = issuer.split('/oauth2')[0];\n  const hostParts = new URL(baseUrl).host.split('.');\n  hostParts[0] += '-admin';\n  const adminHost = hostParts.join('.');\n  const corsAdminUrl = `https://${adminHost}/admin/access/api/trusted_origins`;\n\n  // URL to guide for enabling CORS\n  const guideUrl = 'https://developer.okta.com/docs/guides/enable-cors/granting-cors/';\n\n  // CORS error modal\n  return (\n    <Modal\n      onClose={() => setCorsErrorModalOpen(false)}\n      open={corsErrorModalOpen}\n      closeIcon\n    >\n      <Modal.Header>Network Error</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <p>Seems like logout API call resulted with CORS error.</p>\n          <p>\n            You may need to add your origin\n            {' '}\n            {window.location.origin}\n            {' '}\n            to list of trusted origins in your\n            {' '}\n            <a href={corsAdminUrl} target=\"_blank\" rel=\"noreferrer\">Okta Administrator Dashboard</a>\n          </p>\n          <p>\n            Read\n            {' '}\n            <a href={guideUrl} target=\"_blank\" rel=\"noreferrer\">this guide</a>\n            {' '}\n            for more info.\n          </p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\nexport default CorsErrorModal;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { Route, useHistory, Switch } from 'react-router-dom';\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\nimport { Container } from 'semantic-ui-react';\nimport config from './config';\nimport Home from './Home';\nimport CustomLoginComponent from './Login';\nimport Messages from './Messages';\nimport Navbar from './Navbar';\nimport Profile from './Profile';\nimport CorsErrorModal from './CorsErrorModal';\n\nconst oktaAuth = new OktaAuth(config.oidc);\n\nconst App = () => {\n  const history = useHistory(); // example from react-router\n\n  const restoreOriginalUri = async (_oktaAuth, originalUri) => {\n    history.replace(toRelativeUrl(originalUri || '/', window.location.origin));\n  };\n\n  const customAuthHandler = () => {\n    // Redirect to the /login page that has a CustomLoginComponent\n    history.push('/login');\n  };\n\n  const onAuthResume = async () => {\n    history.push('/login');\n  };\n\n  const [corsErrorModalOpen, setCorsErrorModalOpen] = React.useState(false);\n\n  return (\n    <Security\n      oktaAuth={oktaAuth}\n      onAuthRequired={customAuthHandler}\n      restoreOriginalUri={restoreOriginalUri}\n    >\n      <Navbar {...{ setCorsErrorModalOpen }} />\n      <CorsErrorModal {...{ corsErrorModalOpen, setCorsErrorModalOpen }} />\n      <Container text style={{ marginTop: '7em' }}>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login/callback\" render={(props) => <LoginCallback {...props} onAuthResume={onAuthResume} />} />\n          <Route path=\"/login\" render={() => <CustomLoginComponent {...{ setCorsErrorModalOpen }} />} />\n          <SecureRoute path=\"/messages\" component={Messages} />\n          <SecureRoute path=\"/profile\" component={Profile} />\n        </Switch>\n      </Container>\n    </Security>\n  );\n};\n\nexport default App;\n","/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './polyfills';\nimport App from './App';\nimport config from './config';\nimport './index.css';\n\n/* eslint-disable react/jsx-filename-extension */\nReactDOM.render(\n  <Router basename={config.app.basename}>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}